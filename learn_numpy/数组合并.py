import numpy as np

p=np.arange(1,10).reshape((3,3));
p1=np.array([[-1,4,6],
    [-2,8,11],
    [8,3,1]
    ]);
print(p);
print(p1);

'''
[[ 1  2  3]
 [ 4  5  6]
 [ 7  8  9]
 [-1  4  6]
 [-2  8 11]
 [ 8  3  1]]
'''
print(np.concatenate((p,p1)));#合并矩阵 默认在0号维度上（参考learn_algorithm/axis维度理解.png）拓展也就是已有元素垂直方向上
print(np.vstack((p,p1))) #垂直合并
'''
在已有元素水平方向（右边）叠加元素
[[ 1  2  3 -1  4  6]
 [ 4  5  6 -2  8 11]
 [ 7  8  9  8  3  1]]
'''

print(np.hstack((p,p1)))
print(np.concatenate((p,p1),axis=1));
'''
默认所有元素不管多少维度都合并为一个1维数组
[1 2 3 7 8 9 4 5 6]
'''
print(np.append([[1,2,3],[7,8,9]],[[4,5,6]]))
'''
垂直方向合并，维度必须保持一致（不管水平还是垂直）
以下数据axis=0是垂直是3维可以合并数据，结果
[[1 2 3]
 [7 8 9]
 [4 5 6]]
如果axis=1 水平方向上有数组1有2行 数组2只有1行维度不一样导致合并报错
'''
print(np.append([[1,2,3],[7,8,9]],[[4,5,6]],axis=0))

'''
深度组合：沿着纵轴方向组合
[[[ 1 -1]
  [ 2  4]
  [ 3  6]]
 [[ 4 -2]
  [ 5  8]
  [ 6 11]]
 [[ 7  8]
  [ 8  3]
  [ 9  1]]]
'''
print(np.dstack((p,p1)))

